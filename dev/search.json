[{"path":"https://mlr3learners.mlr-org.com/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michel Lang. Maintainer, author. Quay Au. Author. Stefan Coors. Author. Patrick Schratz. Author.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lang M, Au Q, Coors S, Schratz P (2023). mlr3learners: Recommended Learners 'mlr3'. R package version 0.5.8.9000,  https://github.com/mlr-org/mlr3learners, https://mlr3learners.mlr-org.com.","code":"@Manual{,   title = {mlr3learners: Recommended Learners for 'mlr3'},   author = {Michel Lang and Quay Au and Stefan Coors and Patrick Schratz},   year = {2023},   note = {R package version 0.5.8.9000,  https://github.com/mlr-org/mlr3learners},   url = {https://mlr3learners.mlr-org.com}, }"},{"path":"https://mlr3learners.mlr-org.com/dev/index.html","id":"mlr3learners","dir":"","previous_headings":"","what":"Recommended Learners for mlr3","title":"Recommended Learners for mlr3","text":"Package website: release | dev packages provides essential learners mlr3, maintained mlr-org team. Additional learners can found mlr3extralearners package GitHub. Request additional learners . 👉 Table learners","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Recommended Learners for mlr3","text":"also want install packages connected learners, set dependencies = TRUE:","code":"# CRAN version: install.packages(\"mlr3learners\")  # Development version: remotes::install_github(\"mlr-org/mlr3learners\") # CRAN version: install.packages(\"mlr3learners\", dependencies = TRUE)  # Development version: remotes::install_github(\"mlr-org/mlr3learners\", dependencies = TRUE)"},{"path":[]},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr3learners-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3learners: Recommended Learners for 'mlr3' — mlr3learners-package","title":"mlr3learners: Recommended Learners for 'mlr3' — mlr3learners-package","text":"learners implemented mlr3extralearners package. guide create custom learners covered book: https://mlr3book.mlr-org.com. Feel invited contribute missing learner mlr3 ecosystem!","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr3learners-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3learners: Recommended Learners for 'mlr3' — mlr3learners-package","text":"Maintainer: Michel Lang michellang@gmail.com (ORCID) Authors: Quay Au quayau@gmail.com (ORCID) Stefan Coors mail@stefancoors.de (ORCID) Patrick Schratz patrick.schratz@gmail.com (ORCID)","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"Generalized linear models elastic net regularization. Calls glmnet::cv.glmnet() package glmnet. default hyperparameter family set \"binomial\" \"multinomial\", depending number classes.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.cv_glmnet\") lrn(\"classif.cv_glmnet\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric” Required Packages: mlr3, mlr3learners, glmnet","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"internal-encoding","dir":"Reference","previous_headings":"","what":"Internal Encoding","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"Starting mlr3 v0.5.0, order class labels reversed prior model fitting comply stats::glm() convention negative class provided first factor level.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"Friedman J, Hastie T, Tibshirani R (2010). “Regularization Paths Generalized Linear Models via Coordinate Descent.” Journal Statistical Software, 33(1), 1--22. doi:10.18637/jss.v033.i01 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifCVGlmnet","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"LearnerClassifCVGlmnet$new() LearnerClassifCVGlmnet$selected_features() LearnerClassifCVGlmnet$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"","code":"LearnerClassifCVGlmnet$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"Returns set selected features reported glmnet::predict.glmnet() type set \"nonzero\".","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"","code":"LearnerClassifCVGlmnet$selected_features(lambda = NULL)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"lambda (numeric(1)) Custom lambda, defaults active lambda depending parameter set.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"(character()) feature names.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"","code":"LearnerClassifCVGlmnet$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.cv_glmnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.cv_glmnet","text":"","code":"if (requireNamespace(\"glmnet\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.cv_glmnet\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifCVGlmnet:classif.cv_glmnet>: GLM with Elastic Net Regularization #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, glmnet #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric #> * Properties: multiclass, selected_features, twoclass, weights #>  #> Call:  (if (cv) glmnet::cv.glmnet else glmnet::glmnet)(x = data, y = target,      family = \"binomial\")  #>  #> Measure: Binomial Deviance  #>  #>      Lambda Index Measure      SE Nonzero #> min 0.01594    31   0.987 0.12019      23 #> 1se 0.07064    15   1.094 0.06148      11 #> classif.ce  #>  0.2898551"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"Generalized linear models elastic net regularization. Calls glmnet::glmnet() package glmnet.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"Caution: learner different learners calling glmnet::cv.glmnet() use internal optimization parameter lambda. Instead, lambda needs tuned user (e.g., via mlr3tuning). lambda tuned, glmnet trained tuning iteration. fitting whole path lambdas efficient, done default glmnet::glmnet(), tuning/selecting parameter prediction time (using parameter s) currently supported mlr3 (least efficient manner). Tuning s parameter , therefore, currently discouraged. data ..d. efficiency key, recommend using respective auto-tuning counterparts mlr_learners_classif.cv_glmnet() mlr_learners_regr.cv_glmnet(). However, situations applicable, usually data imbalanced ..d. (longitudinal, time-series) tuning requires custom resampling strategies (blocked design, stratification).","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.glmnet\") lrn(\"classif.glmnet\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric” Required Packages: mlr3, mlr3learners, glmnet","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"internal-encoding","dir":"Reference","previous_headings":"","what":"Internal Encoding","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"Starting mlr3 v0.5.0, order class labels reversed prior model fitting comply stats::glm() convention negative class provided first factor level.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"Friedman J, Hastie T, Tibshirani R (2010). “Regularization Paths Generalized Linear Models via Coordinate Descent.” Journal Statistical Software, 33(1), 1--22. doi:10.18637/jss.v033.i01 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifGlmnet","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"LearnerClassifGlmnet$new() LearnerClassifGlmnet$selected_features() LearnerClassifGlmnet$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"","code":"LearnerClassifGlmnet$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"Returns set selected features reported glmnet::predict.glmnet() type set \"nonzero\".","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"","code":"LearnerClassifGlmnet$selected_features(lambda = NULL)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"lambda (numeric(1)) Custom lambda, defaults active lambda depending parameter set.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"(character()) feature names.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"","code":"LearnerClassifGlmnet$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.glmnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GLM with Elastic Net Regularization Classification Learner — mlr_learners_classif.glmnet","text":"","code":"if (requireNamespace(\"glmnet\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.glmnet\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifGlmnet:classif.glmnet>: GLM with Elastic Net Regularization #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, glmnet #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric #> * Properties: multiclass, twoclass, weights #>  #> Call:  (if (cv) glmnet::cv.glmnet else glmnet::glmnet)(x = data, y = target,      family = \"binomial\")  #>  #>     Df  %Dev   Lambda #> 1    0  0.00 0.235300 #> 2    1  2.75 0.214400 #> 3    1  5.07 0.195300 #> 4    1  7.06 0.178000 #> 5    2  8.84 0.162200 #> 6    2 11.22 0.147800 #> 7    3 13.36 0.134600 #> 8    5 15.29 0.122700 #> 9    5 17.60 0.111800 #> 10   7 19.97 0.101800 #> 11   7 22.36 0.092800 #> 12   8 24.47 0.084560 #> 13   9 26.42 0.077040 #> 14  11 28.18 0.070200 #> 15  11 29.78 0.063960 #> 16  12 31.31 0.058280 #> 17  12 32.79 0.053100 #> 18  12 34.12 0.048390 #> 19  13 35.32 0.044090 #> 20  14 36.72 0.040170 #> 21  17 38.09 0.036600 #> 22  18 39.69 0.033350 #> 23  17 41.11 0.030390 #> 24  17 42.39 0.027690 #> 25  19 43.88 0.025230 #> 26  20 45.40 0.022990 #> 27  21 46.81 0.020950 #> 28  22 48.11 0.019080 #> 29  23 49.33 0.017390 #> 30  26 50.67 0.015840 #> 31  26 52.03 0.014440 #> 32  28 53.36 0.013150 #> 33  29 54.81 0.011990 #> 34  30 56.17 0.010920 #> 35  31 57.58 0.009951 #> 36  32 58.90 0.009067 #> 37  33 60.41 0.008261 #> 38  34 61.88 0.007527 #> 39  34 63.28 0.006859 #> 40  36 64.64 0.006249 #> 41  36 65.94 0.005694 #> 42  38 67.19 0.005188 #> 43  38 68.42 0.004727 #> 44  41 69.66 0.004307 #> 45  40 71.08 0.003925 #> 46  41 72.48 0.003576 #> 47  40 73.84 0.003258 #> 48  40 75.11 0.002969 #> 49  38 76.25 0.002705 #> 50  41 77.28 0.002465 #> 51  43 78.34 0.002246 #> 52  44 79.39 0.002046 #> 53  45 80.44 0.001865 #> 54  45 81.52 0.001699 #> 55  46 82.60 0.001548 #> 56  49 83.74 0.001410 #> 57  47 85.00 0.001285 #> 58  48 86.24 0.001171 #> 59  46 87.33 0.001067 #> 60  47 88.35 0.000972 #> 61  47 89.33 0.000886 #> 62  46 90.23 0.000807 #> 63  46 91.06 0.000735 #> 64  48 91.83 0.000670 #> 65  48 92.55 0.000611 #> 66  49 93.22 0.000556 #> 67  51 93.82 0.000507 #> 68  51 94.37 0.000462 #> 69  51 94.89 0.000421 #> 70  51 95.36 0.000384 #> 71  51 95.78 0.000349 #> 72  50 96.15 0.000318 #> 73  49 96.50 0.000290 #> 74  50 96.83 0.000264 #> 75  50 97.11 0.000241 #> 76  50 97.37 0.000219 #> 77  50 97.60 0.000200 #> 78  51 97.83 0.000182 #> 79  51 98.01 0.000166 #> 80  51 98.19 0.000151 #> 81  51 98.35 0.000138 #> 82  51 98.50 0.000126 #> 83  51 98.63 0.000114 #> 84  51 98.75 0.000104 #> 85  51 98.86 0.000095 #> 86  51 98.96 0.000087 #> 87  51 99.05 0.000079 #> 88  51 99.14 0.000072 #> 89  52 99.21 0.000065 #> 90  52 99.28 0.000060 #> 91  52 99.34 0.000054 #> 92  52 99.40 0.000050 #> 93  52 99.45 0.000045 #> 94  52 99.50 0.000041 #> 95  52 99.54 0.000037 #> 96  52 99.58 0.000034 #> 97  53 99.62 0.000031 #> 98  53 99.65 0.000028 #> 99  53 99.68 0.000026 #> 100 53 99.71 0.000024 #> Warning: Multiple lambdas have been fit. Lambda will be set to 0.01 (see parameter 's'). #> classif.ce  #>  0.2173913"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":null,"dir":"Reference","previous_headings":"","what":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"k-Nearest-Neighbor classification. Calls kknn::kknn() package kknn.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"training step k-NN models, just storing training data process predict step. Therefore, $model returns list following elements: formula: Formula calling kknn::kknn() $predict(). data: Training data calling kknn::kknn() $predict(). pv: Training parameters calling kknn::kknn() $predict(). kknn: Model returned kknn::kknn(), available $predict() called. stored default, must set hyperparameter store_model TRUE.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"store_model: See note.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.kknn\") lrn(\"classif.kknn\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, mlr3learners, kknn","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"Hechenbichler, Klaus, Schliep, Klaus (2004). “Weighted k-nearest-neighbor techniques ordinal classification.” Technical Report Discussion Paper 399, SFB 386, Ludwig-Maximilians University Munich. doi:10.5282/ubm/epub.1769 . Samworth, J R (2012). “Optimal weighted nearest neighbour classifiers.” Annals Statistics, 40(5), 2733--2763. doi:10.1214/12-AOS1049 . Cover, Thomas, Hart, Peter (1967). “Nearest neighbor pattern classification.” IEEE transactions information theory, 13(1), 21--27. doi:10.1109/TIT.1967.1053964 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifKKNN","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"LearnerClassifKKNN$new() LearnerClassifKKNN$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"","code":"LearnerClassifKKNN$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"","code":"LearnerClassifKKNN$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.kknn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"k-Nearest-Neighbor Classification Learner — mlr_learners_classif.kknn","text":"","code":"if (requireNamespace(\"kknn\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.kknn\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifKKNN:classif.kknn>: k-Nearest-Neighbor #> * Model: - #> * Parameters: k=7 #> * Packages: mlr3, mlr3learners, kknn #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, factor, ordered #> * Properties: multiclass, twoclass #> $formula #> Class ~ . #> NULL #>  #> $data #>      Class     V1    V10    V11    V12    V13    V14    V15    V16    V17 #>   1:     R 0.0453 0.2872 0.4918 0.6552 0.6919 0.7797 0.7464 0.9444 1.0000 #>   2:     R 0.0262 0.6194 0.6333 0.7060 0.5544 0.5320 0.6479 0.6931 0.6759 #>   3:     R 0.0100 0.1264 0.0881 0.1992 0.0184 0.2261 0.1729 0.2131 0.0693 #>   4:     R 0.0762 0.4459 0.4152 0.3952 0.4256 0.4135 0.4528 0.5326 0.7306 #>   5:     R 0.0286 0.3039 0.2988 0.4250 0.6343 0.8198 1.0000 0.9988 0.9508 #>  ---                                                                      #> 135:     M 0.0116 0.2271 0.3171 0.2882 0.2657 0.2307 0.1889 0.1791 0.2298 #> 136:     M 0.0131 0.3193 0.3468 0.3738 0.3055 0.1926 0.1385 0.2122 0.2758 #> 137:     M 0.0335 0.2660 0.3188 0.3553 0.3116 0.1965 0.1780 0.2794 0.2870 #> 138:     M 0.0272 0.3997 0.3941 0.3309 0.2926 0.1760 0.1739 0.2043 0.2088 #> 139:     M 0.0303 0.2354 0.2898 0.2812 0.1578 0.0273 0.0673 0.1444 0.2070 #>         V18    V19     V2    V20    V21    V22    V23    V24    V25    V26 #>   1: 0.8874 0.8024 0.0523 0.7818 0.5212 0.4052 0.3957 0.3914 0.3250 0.3200 #>   2: 0.7551 0.8929 0.0582 0.8619 0.7974 0.6737 0.4293 0.3648 0.5331 0.2413 #>   3: 0.2281 0.4060 0.0171 0.3973 0.2741 0.3690 0.5556 0.4846 0.3140 0.5334 #>   4: 0.6193 0.2032 0.0666 0.4636 0.4148 0.4292 0.5730 0.5399 0.3161 0.2285 #>   5: 0.9025 0.7234 0.0453 0.5122 0.2074 0.3985 0.5890 0.2872 0.2043 0.5782 #>  ---                                                                       #> 135: 0.3715 0.6223 0.0744 0.7260 0.7934 0.8045 0.8067 0.9173 0.9327 0.9562 #> 136: 0.4576 0.6487 0.0387 0.7154 0.8010 0.7924 0.8793 1.0000 0.9865 0.9474 #> 137: 0.3969 0.5599 0.0258 0.6936 0.7969 0.7452 0.8203 0.9261 0.8810 0.8814 #> 138: 0.2678 0.2434 0.0378 0.1839 0.2802 0.6172 0.8015 0.8313 0.8440 0.8494 #> 139: 0.2645 0.2828 0.0353 0.4293 0.5685 0.6990 0.7246 0.7622 0.9242 1.0000 #>         V27    V28    V29     V3    V30    V31    V32    V33    V34    V35 #>   1: 0.3271 0.2767 0.4423 0.0843 0.2028 0.3788 0.2947 0.1984 0.2341 0.1306 #>   2: 0.5070 0.8533 0.6036 0.1099 0.8514 0.8512 0.5045 0.1862 0.2709 0.4232 #>   3: 0.5256 0.2520 0.2090 0.0623 0.3559 0.6260 0.7340 0.6120 0.3497 0.3953 #>   4: 0.6995 1.0000 0.7262 0.0481 0.4724 0.5103 0.5459 0.2881 0.0981 0.1951 #>   5: 0.5389 0.3750 0.3411 0.0277 0.5067 0.5580 0.4778 0.3299 0.2198 0.1407 #>  ---                                                                       #> 135: 1.0000 0.9818 0.8684 0.0367 0.6381 0.3997 0.3242 0.2835 0.2413 0.2321 #> 136: 0.9474 0.9315 0.8326 0.0329 0.6213 0.3772 0.2822 0.2042 0.2190 0.2223 #> 137: 0.9301 0.9955 0.8576 0.0398 0.6069 0.3934 0.2464 0.1645 0.1140 0.0956 #> 138: 0.9168 1.0000 0.7896 0.0488 0.5371 0.6472 0.6505 0.4959 0.2175 0.0990 #> 139: 0.9979 0.8297 0.7032 0.0490 0.7141 0.6893 0.4961 0.2584 0.0969 0.0776 #>         V36    V37    V38    V39     V4    V40    V41    V42    V43    V44 #>   1: 0.4182 0.3835 0.1057 0.1840 0.0689 0.1970 0.1674 0.0583 0.1401 0.1628 #>   2: 0.3043 0.6116 0.6756 0.5375 0.1083 0.4719 0.4647 0.2587 0.2129 0.2222 #>   3: 0.3012 0.5408 0.8814 0.9857 0.0205 0.9167 0.6121 0.5006 0.3210 0.3202 #>   4: 0.4181 0.4604 0.3217 0.2828 0.0394 0.2430 0.1979 0.2444 0.1847 0.0841 #>   5: 0.2856 0.3807 0.4158 0.4054 0.0174 0.3296 0.2707 0.2650 0.0723 0.1238 #>  ---                                                                       #> 135: 0.1260 0.0693 0.0701 0.1439 0.0225 0.1475 0.0438 0.0469 0.1476 0.1742 #> 136: 0.1327 0.0521 0.0618 0.1416 0.0078 0.1460 0.0846 0.1055 0.1639 0.1916 #> 137: 0.0080 0.0702 0.0936 0.0894 0.0570 0.1127 0.0873 0.1020 0.1964 0.2256 #> 138: 0.0434 0.1708 0.1979 0.1880 0.0848 0.1108 0.1702 0.0585 0.0638 0.1391 #> 139: 0.0364 0.1572 0.1823 0.1349 0.0608 0.0849 0.0492 0.1367 0.1552 0.1548 #>         V45    V46    V47    V48    V49     V5    V50    V51    V52    V53 #>   1: 0.0621 0.0203 0.0530 0.0742 0.0409 0.1183 0.0061 0.0125 0.0084 0.0089 #>   2: 0.2111 0.0176 0.1348 0.0744 0.0130 0.0974 0.0106 0.0033 0.0232 0.0166 #>   3: 0.4295 0.3654 0.2655 0.1576 0.0681 0.0205 0.0294 0.0241 0.0121 0.0036 #>   4: 0.0692 0.0528 0.0357 0.0085 0.0230 0.0590 0.0046 0.0156 0.0031 0.0054 #>   5: 0.1192 0.1089 0.0623 0.0494 0.0264 0.0384 0.0081 0.0104 0.0045 0.0014 #>  ---                                                                       #> 135: 0.1555 0.1651 0.1181 0.0720 0.0321 0.0076 0.0056 0.0202 0.0141 0.0103 #> 136: 0.2085 0.2335 0.1964 0.1300 0.0633 0.0721 0.0183 0.0137 0.0150 0.0076 #> 137: 0.1814 0.2012 0.1688 0.1037 0.0501 0.0529 0.0136 0.0130 0.0120 0.0039 #> 138: 0.0638 0.0581 0.0641 0.1044 0.0732 0.1127 0.0275 0.0146 0.0091 0.0045 #> 139: 0.1319 0.0985 0.1258 0.0954 0.0489 0.0167 0.0241 0.0042 0.0086 0.0046 #>         V54    V55    V56    V57    V58    V59     V6    V60     V7     V8 #>   1: 0.0048 0.0094 0.0191 0.0140 0.0049 0.0052 0.2583 0.0044 0.2156 0.3481 #>   2: 0.0095 0.0180 0.0244 0.0316 0.0164 0.0095 0.2280 0.0078 0.2431 0.3771 #>   3: 0.0150 0.0085 0.0073 0.0050 0.0044 0.0040 0.0368 0.0117 0.1098 0.1276 #>   4: 0.0105 0.0110 0.0015 0.0072 0.0048 0.0107 0.0649 0.0094 0.1209 0.2467 #>   5: 0.0038 0.0013 0.0089 0.0057 0.0027 0.0051 0.0990 0.0062 0.1201 0.1833 #>  ---                                                                       #> 135: 0.0100 0.0034 0.0026 0.0037 0.0044 0.0057 0.0545 0.0035 0.1110 0.1069 #> 136: 0.0032 0.0037 0.0071 0.0040 0.0009 0.0015 0.1341 0.0085 0.1626 0.1902 #> 137: 0.0053 0.0062 0.0046 0.0045 0.0022 0.0005 0.1091 0.0031 0.1709 0.1684 #> 138: 0.0043 0.0043 0.0098 0.0054 0.0051 0.0065 0.1103 0.0103 0.1349 0.2337 #> 139: 0.0126 0.0036 0.0035 0.0034 0.0079 0.0036 0.1354 0.0048 0.1465 0.1123 #>          V9 #>   1: 0.3337 #>   2: 0.5598 #>   3: 0.0598 #>   4: 0.3564 #>   5: 0.2105 #>  ---        #> 135: 0.1708 #> 136: 0.2610 #> 137: 0.1865 #> 138: 0.3113 #> 139: 0.1945 #>  #> $pv #> $pv$k #> [1] 7 #>  #>  #> $kknn #> NULL #>  #> classif.ce  #>  0.2028986"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"Linear discriminant analysis. Calls MASS::lda() package MASS.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"Parameters method prior exist training prediction accept different values . Therefore, arguments predict stage renamed predict.method predict.prior, respectively.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.lda\") lrn(\"classif.lda\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, mlr3learners, MASS","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"Venables WN, Ripley BD (2002). Modern Applied Statistics S, Fourth edition. Springer, New York. ISBN 0-387-95457-0, http://www.stats.ox.ac.uk/pub/MASS4/.","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifLDA","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"LearnerClassifLDA$new() LearnerClassifLDA$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"","code":"LearnerClassifLDA$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"","code":"LearnerClassifLDA$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.lda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Discriminant Analysis Classification Learner — mlr_learners_classif.lda","text":"","code":"if (requireNamespace(\"MASS\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.lda\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifLDA:classif.lda>: Linear Discriminant Analysis #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, MASS #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, factor, ordered #> * Properties: multiclass, twoclass, weights #> Call: #> lda(formula, data = task$data()) #>  #> Prior probabilities of groups: #>         M         R  #> 0.5323741 0.4676259  #>  #> Group means: #>           V1       V10       V11       V12       V13       V14       V15 #> M 0.03630676 0.2457459 0.2864014 0.2993905 0.3132784 0.3228608 0.3255662 #> R 0.02160615 0.1581754 0.1654523 0.1798738 0.2212954 0.2605985 0.2946385 #>         V16       V17       V18       V19         V2       V20       V21 #> M 0.3834446 0.4168311 0.4547743 0.5386041 0.04593514 0.6192459 0.6689419 #> R 0.3562446 0.3921123 0.4333831 0.4477246 0.03049538 0.4849415 0.5382415 #>         V22       V23       V24       V25       V26       V27       V28 #> M 0.6759635 0.6869757 0.6954932 0.6874851 0.7115959 0.7161838 0.7172486 #> R 0.5657600 0.5855354 0.6364538 0.6686062 0.6980062 0.6784062 0.6564246 #>         V29         V3       V30       V31       V32       V33       V34 #> M 0.6535149 0.04935811 0.5784446 0.4742378 0.4162243 0.3932662 0.3656730 #> R 0.6290492 0.03479077 0.5872523 0.5347446 0.4495262 0.4346492 0.4316369 #>         V35       V36       V37       V38       V39         V4       V40 #> M 0.3306946 0.3059797 0.3023432 0.3276473 0.3446392 0.06257703 0.3128622 #> R 0.4334277 0.4298646 0.3788415 0.3164815 0.2952831 0.03917538 0.3153785 #>         V41       V42       V43       V44       V45       V46        V47 #> M 0.2949622 0.3111108 0.2928027 0.2496432 0.2530459 0.2097324 0.15657838 #> R 0.2811569 0.2431923 0.2121123 0.1839769 0.1472938 0.1160662 0.09262923 #>          V48        V49         V5        V50        V51         V52 #> M 0.11681486 0.06935135 0.08776486 0.02415676 0.01965541 0.015125676 #> R 0.06791231 0.03676923 0.05794615 0.01729231 0.01205538 0.009849231 #>           V53         V54         V55         V56         V57         V58 #> M 0.011585135 0.012136486 0.009932432 0.009304054 0.008210811 0.009474324 #> R 0.009373846 0.009413846 0.008427692 0.007841538 0.007683077 0.006376923 #>           V59        V6         V60        V7        V8        V9 #> M 0.009027027 0.1116824 0.006182432 0.1236297 0.1473135 0.2040095 #> R 0.006969231 0.0929800 0.006052308 0.1092738 0.1122738 0.1338862 #>  #> Coefficients of linear discriminants: #>              LD1 #> V1  -17.48232466 #> V10   4.54922476 #> V11  -3.23817123 #> V12  -7.06707996 #> V13   1.74634857 #> V14   1.65675440 #> V15  -1.79638104 #> V16  -0.28889704 #> V17   1.74535672 #> V18   1.29253149 #> V19  -1.09549420 #> V2   -4.64147518 #> V20  -1.54066410 #> V21   0.17631809 #> V22   0.64213499 #> V23   0.19556434 #> V24  -5.46602883 #> V25   5.91339024 #> V26  -3.30876840 #> V27   1.26626305 #> V28  -3.77740504 #> V29   3.77201874 #> V3   26.36206029 #> V30  -5.22310065 #> V31   5.90447108 #> V32   0.62695105 #> V33  -5.29530069 #> V34   5.94306534 #> V35  -4.22798614 #> V36   0.61208640 #> V37   2.50398730 #> V38  -0.88503472 #> V39  -2.75272630 #> V4  -23.23130234 #> V40   4.68125933 #> V41  -3.40064833 #> V42   2.76203339 #> V43  -0.94227140 #> V44   0.04672658 #> V45  -0.09659465 #> V46   1.04298274 #> V47 -11.46915469 #> V48  -1.12329152 #> V49 -17.12905411 #> V5   -3.34280611 #> V50  46.90923719 #> V51  11.23993721 #> V52   5.68461350 #> V53   5.14826883 #> V54  20.91929145 #> V55  -1.18181396 #> V56  28.69165223 #> V57  10.97149377 #> V58 -40.35109641 #> V59 -29.87006450 #> V6   -3.99707664 #> V60  45.14325721 #> V7    5.77519664 #> V8    6.21456843 #> V9   -5.90675942 #> classif.ce  #>  0.3188406"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"Classification via logistic regression. Calls stats::glm() family set \"binomial\".","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"internal-encoding","dir":"Reference","previous_headings":"","what":"Internal Encoding","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"Starting mlr3 v0.5.0, order class labels reversed prior model fitting comply stats::glm() convention negative class provided first factor level.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"weights","dir":"Reference","previous_headings":"","what":"Weights","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"advisable change weights logistic regression. details, see question Cross Validated.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"model: Actual default: TRUE. Adjusted default: FALSE. Reason change: Save memory.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.log_reg\") lrn(\"classif.log_reg\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric”, “character”, “factor”, “ordered” Required Packages: mlr3, mlr3learners, 'stats'","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"contrasts","dir":"Reference","previous_headings":"","what":"Contrasts","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"ensure reproducibility, learner always uses default contrasts: contr.treatment() unordered factors, contr.poly() ordered factors. Setting option \"contrasts\" effect. Instead, set respective hyperparameter use mlr3pipelines create dummy features.","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifLogReg","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"LearnerClassifLogReg$new() LearnerClassifLogReg$loglik() LearnerClassifLogReg$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"","code":"LearnerClassifLogReg$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"method-loglik-","dir":"Reference","previous_headings":"","what":"Method loglik()","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"Extract log-likelihood (e.g., via stats::logLik() fitted model.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"","code":"LearnerClassifLogReg$loglik()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"","code":"LearnerClassifLogReg$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.log_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic Regression Classification Learner — mlr_learners_classif.log_reg","text":"","code":"if (requireNamespace(\"stats\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.log_reg\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifLogReg:classif.log_reg>: Logistic Regression #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, stats #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, character, factor, ordered #> * Properties: loglik, twoclass #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #>  #> Call:  stats::glm(formula = task$formula(), family = \"binomial\", data = data,  #>     model = FALSE) #>  #> Coefficients: #> (Intercept)           V1          V10          V11          V12          V13   #>    -152.926      718.106     -408.286      298.320      295.029      -25.247   #>         V14          V15          V16          V17          V18          V19   #>     -62.400     -111.869       68.770        9.006      -30.480        4.626   #>          V2          V20          V21          V22          V23          V24   #>     -58.547      110.321     -258.395      362.177     -288.511      292.859   #>         V25          V26          V27          V28          V29           V3   #>    -235.900      276.851     -188.373        9.033       58.600     -868.382   #>         V30          V31          V32          V33          V34          V35   #>      30.664     -163.224      127.226      -36.136      -24.483      101.328   #>         V36          V37          V38          V39           V4          V40   #>    -152.516      -10.370      111.595       68.659      317.081       40.471   #>         V41          V42          V43          V44          V45          V46   #>    -168.806      330.244     -190.450      -75.419       35.179      -90.421   #>         V47          V48          V49           V5          V50          V51   #>      15.608      506.648       93.157     -301.085     -517.491     1344.318   #>         V52          V53          V54          V55          V56          V57   #>    1951.173     -333.714      605.601      468.087    -4254.375      846.839   #>         V58          V59           V6          V60           V7           V8   #>   -1676.449     4305.732      385.307       69.795     -397.029     -418.317   #>          V9   #>     465.834   #>  #> Degrees of Freedom: 138 Total (i.e. Null);  78 Residual #> Null Deviance:\t    192.1  #> Residual Deviance: 5.344e-09 \tAIC: 122 #> classif.ce  #>  0.3478261"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"Multinomial log-linear models via neural networks. Calls nnet::multinom() package nnet.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.multinom\") lrn(\"classif.multinom\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric”, “factor” Required Packages: mlr3, mlr3learners, nnet","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifMultinom","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"LearnerClassifMultinom$new() LearnerClassifMultinom$loglik() LearnerClassifMultinom$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"","code":"LearnerClassifMultinom$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"method-loglik-","dir":"Reference","previous_headings":"","what":"Method loglik()","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"Extract log-likelihood (e.g., via stats::logLik() fitted model.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"","code":"LearnerClassifMultinom$loglik()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"","code":"LearnerClassifMultinom$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.multinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multinomial log-linear learner via neural networks — mlr_learners_classif.multinom","text":"","code":"if (requireNamespace(\"nnet\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.multinom\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifMultinom:classif.multinom>: Multinomial Log-Linear Model #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, nnet #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, factor #> * Properties: loglik, multiclass, twoclass, weights #> # weights:  62 (61 variable) #> initial  value 96.347458  #> iter  10 value 38.331536 #> iter  20 value 22.758196 #> iter  30 value 10.617249 #> iter  40 value 3.654243 #> iter  50 value 0.026720 #> final  value 0.000098  #> converged #> Call: #> nnet::multinom(formula = Class ~ ., data = task$data()) #>  #> Coefficients: #> (Intercept)          V1         V10         V11         V12         V13  #>   3219.0816  -3018.7917   1642.8406  -7204.8498  -1452.7070    541.5218  #>         V14         V15         V16         V17         V18         V19  #>    659.4937    796.1662   -347.0348    872.6442  -2099.3167   2444.4462  #>          V2         V20         V21         V22         V23         V24  #>  -1769.9097   -876.2954   -523.6586   -347.8029   -959.8279  -2579.6408  #>         V25         V26         V27         V28         V29          V3  #>   2083.8676    238.8263    776.2235   -887.4744    668.4292  -1847.7831  #>         V30         V31         V32         V33         V34         V35  #>  -3905.2168   5227.9850  -1088.8049  -3993.4464   3512.1501  -2324.2699  #>         V36         V37         V38         V39          V4         V40  #>   3146.8858   1961.2061    185.5178  -3370.5470  -5651.7409   1733.2126  #>         V41         V42         V43         V44         V45         V46  #>   -818.2537  -2838.8361  -2076.1197    555.0563  -3242.6555   3623.2849  #>         V47         V48         V49          V5         V50         V51  #>    469.8096  -6369.8056  -1204.6693  -3413.0916   3255.3417  -1756.3173  #>         V52         V53         V54         V55         V56         V57  #>  -2569.0261   -644.5525   -739.6497    376.7113    346.1788   -497.8011  #>         V58         V59          V6         V60          V7          V8  #>   -941.0340  -1001.9388   3123.7167    483.5704   7482.5318   4748.7171  #>          V9  #>  -4252.2205  #>  #> Residual Deviance: 0.0001969202  #> AIC: 122.0002  #> classif.ce  #>  0.3043478"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"Naive Bayes classification. Calls e1071::naiveBayes() package e1071.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.naive_bayes\") lrn(\"classif.naive_bayes\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric”, “factor” Required Packages: mlr3, mlr3learners, e1071","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifNaiveBayes","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"LearnerClassifNaiveBayes$new() LearnerClassifNaiveBayes$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"","code":"LearnerClassifNaiveBayes$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"","code":"LearnerClassifNaiveBayes$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.naive_bayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Naive Bayes Classification Learner — mlr_learners_classif.naive_bayes","text":"","code":"if (requireNamespace(\"e1071\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.naive_bayes\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifNaiveBayes:classif.naive_bayes>: Naive Bayes #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, e1071 #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, factor #> * Properties: multiclass, twoclass #>  #> Naive Bayes Classifier for Discrete Predictors #>  #> Call: #> naiveBayes.default(x = x, y = y) #>  #> A-priori probabilities: #> y #>         M         R  #> 0.5323741 0.4676259  #>  #> Conditional probabilities: #>    V1 #> y         [,1]       [,2] #>   M 0.03820541 0.02923425 #>   R 0.02216769 0.01324535 #>  #>    V10 #> y        [,1]      [,2] #>   M 0.2668514 0.1542923 #>   R 0.1715538 0.1261207 #>  #>    V11 #> y        [,1]      [,2] #>   M 0.3103311 0.1355241 #>   R 0.1872400 0.1210304 #>  #>    V12 #> y        [,1]      [,2] #>   M 0.3198324 0.1224421 #>   R 0.1945246 0.1365722 #>  #>    V13 #> y        [,1]      [,2] #>   M 0.3220054 0.1323629 #>   R 0.2363538 0.1375769 #>  #>    V14 #> y        [,1]      [,2] #>   M 0.3081932 0.1395529 #>   R 0.2826046 0.1715141 #>  #>    V15 #> y        [,1]      [,2] #>   M 0.3079338 0.1770009 #>   R 0.3319938 0.2187631 #>  #>    V16 #> y        [,1]      [,2] #>   M 0.3516730 0.1996317 #>   R 0.4010846 0.2550495 #>  #>    V17 #> y        [,1]      [,2] #>   M 0.3752662 0.2229348 #>   R 0.4521015 0.2931120 #>  #>    V18 #> y        [,1]      [,2] #>   M 0.4203892 0.2458546 #>   R 0.4710569 0.2823717 #>  #>    V19 #> y        [,1]      [,2] #>   M 0.5105432 0.2405042 #>   R 0.4784185 0.2683995 #>  #>    V2 #> y         [,1]       [,2] #>   M 0.04782838 0.04107558 #>   R 0.03067538 0.02506338 #>  #>    V20 #> y        [,1]      [,2] #>   M 0.6092986 0.2444012 #>   R 0.5239231 0.2699607 #>  #>    V21 #> y        [,1]      [,2] #>   M 0.6620554 0.2399704 #>   R 0.5696985 0.2556843 #>  #>    V22 #> y        [,1]      [,2] #>   M 0.6462541 0.2295185 #>   R 0.5899415 0.2558849 #>  #>    V23 #> y        [,1]      [,2] #>   M 0.6528203 0.2691912 #>   R 0.6193169 0.2350847 #>  #>    V24 #> y        [,1]      [,2] #>   M 0.6850865 0.2663132 #>   R 0.6633323 0.2189544 #>  #>    V25 #> y        [,1]      [,2] #>   M 0.6874838 0.2484423 #>   R 0.6855615 0.2313373 #>  #>    V26 #> y        [,1]      [,2] #>   M 0.7214689 0.2330164 #>   R 0.7148538 0.2238818 #>  #>    V27 #> y        [,1]      [,2] #>   M 0.7322811 0.2704416 #>   R 0.7043323 0.2015376 #>  #>    V28 #> y        [,1]      [,2] #>   M 0.7385554 0.2545958 #>   R 0.6731092 0.2028707 #>  #>    V29 #> y        [,1]      [,2] #>   M 0.6721432 0.2390366 #>   R 0.6212046 0.2245412 #>  #>    V3 #> y         [,1]       [,2] #>   M 0.05278514 0.04519451 #>   R 0.03573538 0.02884880 #>  #>    V30 #> y        [,1]      [,2] #>   M 0.5993824 0.2065259 #>   R 0.5695000 0.2234338 #>  #>    V31 #> y        [,1]      [,2] #>   M 0.4880932 0.2093658 #>   R 0.5138031 0.2050284 #>  #>    V32 #> y        [,1]      [,2] #>   M 0.4187108 0.1952257 #>   R 0.4273123 0.2144815 #>  #>    V33 #> y        [,1]      [,2] #>   M 0.3885297 0.1850815 #>   R 0.4141338 0.2188314 #>  #>    V34 #> y        [,1]      [,2] #>   M 0.3718243 0.2054629 #>   R 0.4417585 0.2534440 #>  #>    V35 #> y        [,1]      [,2] #>   M 0.3478257 0.2578025 #>   R 0.4568492 0.2620992 #>  #>    V36 #> y        [,1]      [,2] #>   M 0.3296068 0.2614311 #>   R 0.4442062 0.2636774 #>  #>    V37 #> y        [,1]      [,2] #>   M 0.3364770 0.2352176 #>   R 0.3876062 0.2282705 #>  #>    V38 #> y        [,1]      [,2] #>   M 0.3436162 0.2222424 #>   R 0.3177462 0.1926983 #>  #>    V39 #> y        [,1]      [,2] #>   M 0.3451919 0.1918775 #>   R 0.2813015 0.1692860 #>  #>    V4 #> y         [,1]       [,2] #>   M 0.06314865 0.05731969 #>   R 0.04315231 0.03274188 #>  #>    V40 #> y        [,1]      [,2] #>   M 0.3177919 0.1549638 #>   R 0.2869338 0.1602337 #>  #>    V41 #> y        [,1]      [,2] #>   M 0.2924419 0.1584122 #>   R 0.2554123 0.1494365 #>  #>    V42 #> y        [,1]      [,2] #>   M 0.2980770 0.1583361 #>   R 0.2242785 0.1355503 #>  #>    V43 #> y        [,1]      [,2] #>   M 0.2800270 0.1266304 #>   R 0.1903015 0.1115612 #>  #>    V44 #> y        [,1]      [,2] #>   M 0.2467770 0.1379978 #>   R 0.1590754 0.0847445 #>  #>    V45 #> y        [,1]       [,2] #>   M 0.2413757 0.17157441 #>   R 0.1285369 0.07083392 #>  #>    V46 #> y        [,1]       [,2] #>   M 0.1918000 0.14101399 #>   R 0.1072015 0.07295683 #>  #>    V47 #> y         [,1]       [,2] #>   M 0.14023243 0.08660851 #>   R 0.08487692 0.05350242 #>  #>    V48 #> y         [,1]       [,2] #>   M 0.10642432 0.06616000 #>   R 0.06296154 0.03956288 #>  #>    V49 #> y         [,1]       [,2] #>   M 0.06217568 0.03623601 #>   R 0.03353077 0.02217118 #>  #>    V5 #> y         [,1]       [,2] #>   M 0.08375405 0.05493292 #>   R 0.06846923 0.05023332 #>  #>    V50 #> y         [,1]       [,2] #>   M 0.02151081 0.01332423 #>   R 0.01611538 0.01036164 #>  #>    V51 #> y         [,1]        [,2] #>   M 0.01867027 0.011814893 #>   R 0.01164308 0.008235062 #>  #>    V52 #> y          [,1]        [,2] #>   M 0.015932432 0.009817138 #>   R 0.009916923 0.007300462 #>  #>    V53 #> y          [,1]        [,2] #>   M 0.012009459 0.007278231 #>   R 0.008709231 0.005889523 #>  #>    V54 #> y          [,1]        [,2] #>   M 0.012145946 0.009001586 #>   R 0.009449231 0.005687874 #>  #>    V55 #> y          [,1]        [,2] #>   M 0.009405405 0.007378215 #>   R 0.008776923 0.004966883 #>  #>    V56 #> y          [,1]        [,2] #>   M 0.008831081 0.005836398 #>   R 0.007327692 0.004535571 #>  #>    V57 #> y          [,1]        [,2] #>   M 0.007025676 0.004965140 #>   R 0.008350769 0.005793561 #>  #>    V58 #> y          [,1]        [,2] #>   M 0.008498649 0.006772476 #>   R 0.006550769 0.004320776 #>  #>    V59 #> y          [,1]        [,2] #>   M 0.008359459 0.006305682 #>   R 0.006830769 0.004645661 #>  #>    V6 #> y        [,1]       [,2] #>   M 0.1112432 0.05277853 #>   R 0.1052662 0.06839042 #>  #>    V60 #> y          [,1]        [,2] #>   M 0.006783784 0.004779036 #>   R 0.005621538 0.003252667 #>  #>    V7 #> y        [,1]       [,2] #>   M 0.1277432 0.05890593 #>   R 0.1167431 0.06781801 #>  #>    V8 #> y        [,1]       [,2] #>   M 0.1554946 0.09599900 #>   R 0.1188323 0.08140447 #>  #>    V9 #> y        [,1]      [,2] #>   M 0.2279230 0.1392879 #>   R 0.1496862 0.1086467 #>  #> classif.ce  #>  0.3333333"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Neural Network Learner — mlr_learners_classif.nnet","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"Single Layer Neural Network. Calls nnet::nnet.formula() package nnet. Note modern neural networks multiple layers connected via package mlr3keras.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.nnet\") lrn(\"classif.nnet\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, mlr3learners, nnet","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"size: Adjusted default: 3L. Reason change: default nnet().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"custom-mlr-parameters","dir":"Reference","previous_headings":"","what":"Custom mlr3 parameters","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"formula: provided, formula set task$formula().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"Ripley BD (1996). Pattern Recognition Neural Networks. Cambridge University Press. doi:10.1017/cbo9780511812651 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifNnet","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"LearnerClassifNnet$new() LearnerClassifNnet$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"","code":"LearnerClassifNnet$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"","code":"LearnerClassifNnet$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.nnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classification Neural Network Learner — mlr_learners_classif.nnet","text":"","code":"if (requireNamespace(\"nnet\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.nnet\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifNnet:classif.nnet>: Single Layer Neural Network #> * Model: - #> * Parameters: size=3 #> * Packages: mlr3, mlr3learners, nnet #> * Predict Types:  response, [prob] #> * Feature Types: integer, numeric, factor, ordered #> * Properties: multiclass, twoclass, weights #> # weights:  187 #> initial  value 97.347875  #> iter  10 value 66.682628 #> iter  20 value 29.650315 #> iter  30 value 14.869850 #> iter  40 value 12.686067 #> iter  50 value 12.676816 #> iter  60 value 12.676402 #> final  value 12.676366  #> converged #> a 60-3-1 network with 187 weights #> inputs: V1 V10 V11 V12 V13 V14 V15 V16 V17 V18 V19 V2 V20 V21 V22 V23 V24 V25 V26 V27 V28 V29 V3 V30 V31 V32 V33 V34 V35 V36 V37 V38 V39 V4 V40 V41 V42 V43 V44 V45 V46 V47 V48 V49 V5 V50 V51 V52 V53 V54 V55 V56 V57 V58 V59 V6 V60 V7 V8 V9  #> output(s): Class  #> options were - entropy fitting  #> classif.ce  #>  0.2173913"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"Quadratic discriminant analysis. Calls MASS::qda() package MASS.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"Parameters method prior exist training prediction accept different values . Therefore, arguments predict stage renamed predict.method predict.prior, respectively.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.qda\") lrn(\"classif.qda\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, mlr3learners, MASS","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"Venables WN, Ripley BD (2002). Modern Applied Statistics S, Fourth edition. Springer, New York. ISBN 0-387-95457-0, http://www.stats.ox.ac.uk/pub/MASS4/.","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifQDA","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"LearnerClassifQDA$new() LearnerClassifQDA$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"","code":"LearnerClassifQDA$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"","code":"LearnerClassifQDA$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.qda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quadratic Discriminant Analysis Classification Learner — mlr_learners_classif.qda","text":"","code":"if (requireNamespace(\"MASS\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.qda\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifQDA:classif.qda>: Quadratic Discriminant Analysis #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, MASS #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, factor, ordered #> * Properties: multiclass, twoclass, weights #> Call: #> qda(task$formula(), data = task$data()) #>  #> Prior probabilities of groups: #>         M         R  #> 0.5323741 0.4676259  #>  #> Group means: #>           V1       V10       V11       V12       V13       V14       V15 #> M 0.03685541 0.2449135 0.2902635 0.3053568 0.3053838 0.3016338 0.3176608 #> R 0.02217077 0.1648138 0.1786692 0.1872538 0.2218031 0.2717292 0.3161554 #>         V16       V17       V18       V19        V2       V20       V21 #> M 0.3776676 0.4195135 0.4658757 0.5488176 0.0497527 0.6206554 0.6741068 #> R 0.3850000 0.4215862 0.4401769 0.4556600 0.0319600 0.4839769 0.5250585 #>         V22       V23       V24       V25       V26       V27       V28 #> M 0.6894811 0.6961351 0.7101041 0.6982432 0.7050676 0.7007189 0.6964608 #> R 0.5483646 0.6042015 0.6600769 0.6824815 0.7093508 0.6993185 0.6827585 #>         V29         V3       V30       V31       V32       V33       V34 #> M 0.6390622 0.05247973 0.5770568 0.4935946 0.4420662 0.4045851 0.3668378 #> R 0.6351154 0.03735692 0.5860323 0.5314369 0.4428062 0.4289708 0.4354569 #>         V35       V36       V37       V38       V39         V4       V40 #> M 0.3289041 0.3106878 0.3087230 0.3220743 0.3280365 0.06625270 0.3093405 #> R 0.4513585 0.4578877 0.4094138 0.3384677 0.3070431 0.04328615 0.3116569 #>         V41       V42       V43       V44       V45       V46        V47 #> M 0.3075730 0.3185865 0.2914649 0.2507122 0.2458716 0.1994230 0.14818784 #> R 0.2821538 0.2511600 0.2070754 0.1707862 0.1410446 0.1128262 0.08982615 #>          V48        V49         V5        V50        V51        V52         V53 #> M 0.11109595 0.06443919 0.09013243 0.02253919 0.01968108 0.01617703 0.011733784 #> R 0.06759385 0.03909692 0.06933231 0.01572769 0.01113385 0.01000615 0.009646154 #>           V54         V55         V56         V57         V58         V59 #> M 0.012485135 0.009135135 0.008606757 0.007527027 0.008504054 0.008437838 #> R 0.009256923 0.009047692 0.007095385 0.007812308 0.006435385 0.007100000 #>          V6         V60        V7        V8        V9 #> M 0.1169608 0.006995946 0.1246824 0.1458649 0.2095014 #> R 0.1026646 0.006076923 0.1178554 0.1172246 0.1415862 #> classif.ce  #>  0.3043478"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranger Classification Learner — mlr_learners_classif.ranger","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"Random classification forest. Calls ranger::ranger() package ranger.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"custom-mlr-parameters","dir":"Reference","previous_headings":"","what":"Custom mlr3 parameters","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"mtry: hyperparameter can alternatively set via hyperparameter mtry.ratio mtry = max(ceiling(mtry.ratio * n_features), 1). Note mtry mtry.ratio mutually exclusive.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"num.threads: Actual default: NULL, triggering auto-detection number CPUs. Adjusted value: 1. Reason change: Conflicting parallelization via future.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.ranger\") lrn(\"classif.ranger\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric”, “character”, “factor”, “ordered” Required Packages: mlr3, mlr3learners, ranger","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"Wright, N. M, Ziegler, Andreas (2017). “ranger: Fast Implementation Random Forests High Dimensional Data C++ R.” Journal Statistical Software, 77(1), 1--17. doi:10.18637/jss.v077.i01 . Breiman, Leo (2001). “Random Forests.” Machine Learning, 45(1), 5--32. ISSN 1573-0565, doi:10.1023/:1010933404324 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifRanger","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"LearnerClassifRanger$new() LearnerClassifRanger$importance() LearnerClassifRanger$oob_error() LearnerClassifRanger$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"","code":"LearnerClassifRanger$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"importance scores extracted model slot variable.importance. Parameter importance.mode must set \"impurity\", \"impurity_corrected\", \"permutation\"","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"","code":"LearnerClassifRanger$importance()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"Named numeric().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"method-oob-error-","dir":"Reference","previous_headings":"","what":"Method oob_error()","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"--bag error, extracted model slot prediction.error.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"","code":"LearnerClassifRanger$oob_error()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"numeric(1).","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"","code":"LearnerClassifRanger$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.ranger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ranger Classification Learner — mlr_learners_classif.ranger","text":"","code":"if (requireNamespace(\"ranger\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.ranger\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifRanger:classif.ranger>: Random Forest #> * Model: - #> * Parameters: num.threads=1 #> * Packages: mlr3, mlr3learners, ranger #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric, character, factor, ordered #> * Properties: hotstart_backward, importance, multiclass, oob_error, #>   twoclass, weights #> Ranger result #>  #> Call: #>  ranger::ranger(dependent.variable.name = task$target_names, data = task$data(),      probability = self$predict_type == \"prob\", case.weights = task$weights$weight,      num.threads = 1L)  #>  #> Type:                             Classification  #> Number of trees:                  500  #> Sample size:                      139  #> Number of independent variables:  60  #> Mtry:                             7  #> Target node size:                 1  #> Variable importance mode:         none  #> Splitrule:                        gini  #> OOB prediction error:             20.14 %  #> function ()  #> .__LearnerClassifRanger__importance(self = self, private = private,  #>     super = super) #> <environment: 0x5566fe9c0078> #> classif.ce  #>  0.1449275"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":null,"dir":"Reference","previous_headings":"","what":"Support Vector Machine — mlr_learners_classif.svm","title":"Support Vector Machine — mlr_learners_classif.svm","text":"Support vector machine classification. Calls e1071::svm() package e1071.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Support Vector Machine — mlr_learners_classif.svm","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.svm\") lrn(\"classif.svm\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Support Vector Machine — mlr_learners_classif.svm","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric” Required Packages: mlr3, mlr3learners, e1071","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Support Vector Machine — mlr_learners_classif.svm","text":"Cortes, Corinna, Vapnik, Vladimir (1995). “Support-vector networks.” Machine Learning, 20(3), 273--297. doi:10.1007/BF00994018 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Support Vector Machine — mlr_learners_classif.svm","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifSVM","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Support Vector Machine — mlr_learners_classif.svm","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Support Vector Machine — mlr_learners_classif.svm","text":"LearnerClassifSVM$new() LearnerClassifSVM$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Support Vector Machine — mlr_learners_classif.svm","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support Vector Machine — mlr_learners_classif.svm","text":"","code":"LearnerClassifSVM$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Support Vector Machine — mlr_learners_classif.svm","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Support Vector Machine — mlr_learners_classif.svm","text":"","code":"LearnerClassifSVM$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support Vector Machine — mlr_learners_classif.svm","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.svm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Support Vector Machine — mlr_learners_classif.svm","text":"","code":"if (requireNamespace(\"e1071\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.svm\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerClassifSVM:classif.svm>: Support Vector Machine #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, e1071 #> * Predict Types:  [response], prob #> * Feature Types: logical, integer, numeric #> * Properties: multiclass, twoclass #>  #> Call: #> svm.default(x = data, y = task$truth(), probability = (self$predict_type ==  #>     \"prob\")) #>  #>  #> Parameters: #>    SVM-Type:  C-classification  #>  SVM-Kernel:  radial  #>        cost:  1  #>  #> Number of Support Vectors:  112 #>  #> classif.ce  #>  0.1304348"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":null,"dir":"Reference","previous_headings":"","what":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"eXtreme Gradient Boosting classification. Calls xgboost::xgb.train() package xgboost. specified otherwise, evaluation metric set default \"logloss\" binary classification problems set \"mlogloss\" multiclass problems. necessary silence deprecation warning. Note using watchlist parameter directly lead problems wrapping Learner mlr3pipelines GraphLearner preprocessing steps applied data watchlist.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"compute GPUs, first need compile xgboost link CUDA. See https://xgboost.readthedocs.io/en/stable/build.html#building--gpu-support.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"nrounds: Actual default: default. Adjusted default: 1. Reason change: Without default construction learner error. Just setting nonsense default workaround . nrounds needs tuned user. nthread: Actual value: Undefined, triggering auto-detection number CPUs. Adjusted value: 1. Reason change: Conflicting parallelization via future. verbose: Actual default: 1. Adjusted default: 0. Reason change: Reduce verbosity.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"early-stopping","dir":"Reference","previous_headings":"","what":"Early stopping","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"Early stopping can used find optimal number boosting rounds. early_stopping_set parameter controls set used monitor performance. Set early_stopping_set = \"test\" monitor performance model test set training. test set early stopping can set \"test\" row role mlr3::Task. Additionally, range must set performance must increase early_stopping_rounds maximum number boosting rounds nrounds. resampling, test set automatically applied mlr3::Resampling. using test set early stopping can potentially bias performance scores. See section early stopping examples.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.xgboost\") lrn(\"classif.xgboost\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric” Required Packages: mlr3, mlr3learners, xgboost","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"Chen, Tianqi, Guestrin, Carlos (2016). “Xgboost: scalable tree boosting system.” Proceedings 22nd ACM SIGKDD Conference Knowledge Discovery Data Mining, 785--794. ACM. doi:10.1145/2939672.2939785 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifXgboost","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"LearnerClassifXgboost$new() LearnerClassifXgboost$importance() LearnerClassifXgboost$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"","code":"LearnerClassifXgboost$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"importance scores calculated xgboost::xgb.importance().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"","code":"LearnerClassifXgboost$importance()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"Named numeric().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"","code":"LearnerClassifXgboost$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_classif.xgboost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extreme Gradient Boosting Classification Learner — mlr_learners_classif.xgboost","text":"","code":"if (FALSE) { if (requireNamespace(\"xgboost\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"classif.xgboost\") print(learner)  # Define a Task task = tsk(\"sonar\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } }  if (FALSE) { # Train learner with early stopping on spam data set task = tsk(\"spam\")  # Split task into training and test set split = partition(task, ratio = 0.8) task$set_row_roles(split$test, \"test\")  # Set early stopping parameter learner = lrn(\"classif.xgboost\",   nrounds = 100,   early_stopping_rounds = 10,   early_stopping_set = \"test\" )  # Train learner with early stopping learner$train(task) }"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"Generalized linear models elastic net regularization. Calls glmnet::cv.glmnet() package glmnet. default hyperparameter family set \"gaussian\".","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.cv_glmnet\") lrn(\"regr.cv_glmnet\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"Task type: “regr” Predict Types: “response” Feature Types: “logical”, “integer”, “numeric” Required Packages: mlr3, mlr3learners, glmnet","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"Friedman J, Hastie T, Tibshirani R (2010). “Regularization Paths Generalized Linear Models via Coordinate Descent.” Journal Statistical Software, 33(1), 1--22. doi:10.18637/jss.v033.i01 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrCVGlmnet","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"LearnerRegrCVGlmnet$new() LearnerRegrCVGlmnet$selected_features() LearnerRegrCVGlmnet$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"","code":"LearnerRegrCVGlmnet$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"Returns set selected features reported glmnet::predict.glmnet() type set \"nonzero\".","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"","code":"LearnerRegrCVGlmnet$selected_features(lambda = NULL)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"lambda (numeric(1)) Custom lambda, defaults active lambda depending parameter set.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"(character()) feature names.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"","code":"LearnerRegrCVGlmnet$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.cv_glmnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.cv_glmnet","text":"","code":"if (requireNamespace(\"glmnet\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"regr.cv_glmnet\") print(learner)  # Define a Task task = tsk(\"mtcars\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerRegrCVGlmnet:regr.cv_glmnet>: GLM with Elastic Net Regularization #> * Model: - #> * Parameters: family=gaussian #> * Packages: mlr3, mlr3learners, glmnet #> * Predict Types:  [response] #> * Feature Types: logical, integer, numeric #> * Properties: selected_features, weights #> Warning: Option grouped=FALSE enforced in cv.glmnet, since < 3 observations per fold #>  #> Call:  (if (cv) glmnet::cv.glmnet else glmnet::glmnet)(x = data, y = target,      family = \"gaussian\")  #>  #> Measure: Mean-Squared Error  #>  #>     Lambda Index Measure    SE Nonzero #> min 0.7786    21   6.857 3.310       3 #> 1se 1.6389    13   9.452 4.709       3 #> regr.mse  #> 12.45862"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"Generalized linear models elastic net regularization. Calls glmnet::glmnet() package glmnet. default hyperparameter family set \"gaussian\".","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"Caution: learner different learners calling glmnet::cv.glmnet() use internal optimization parameter lambda. Instead, lambda needs tuned user (e.g., via mlr3tuning). lambda tuned, glmnet trained tuning iteration. fitting whole path lambdas efficient, done default glmnet::glmnet(), tuning/selecting parameter prediction time (using parameter s) currently supported mlr3 (least efficient manner). Tuning s parameter , therefore, currently discouraged. data ..d. efficiency key, recommend using respective auto-tuning counterparts mlr_learners_classif.cv_glmnet() mlr_learners_regr.cv_glmnet(). However, situations applicable, usually data imbalanced ..d. (longitudinal, time-series) tuning requires custom resampling strategies (blocked design, stratification).","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.glmnet\") lrn(\"regr.glmnet\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"Task type: “regr” Predict Types: “response” Feature Types: “logical”, “integer”, “numeric” Required Packages: mlr3, mlr3learners, glmnet","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"Friedman J, Hastie T, Tibshirani R (2010). “Regularization Paths Generalized Linear Models via Coordinate Descent.” Journal Statistical Software, 33(1), 1--22. doi:10.18637/jss.v033.i01 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrGlmnet","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"LearnerRegrGlmnet$new() LearnerRegrGlmnet$selected_features() LearnerRegrGlmnet$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"","code":"LearnerRegrGlmnet$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"Returns set selected features reported glmnet::predict.glmnet() type set \"nonzero\".","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"","code":"LearnerRegrGlmnet$selected_features(lambda = NULL)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"lambda (numeric(1)) Custom lambda, defaults active lambda depending parameter set.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"(character()) feature names.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"","code":"LearnerRegrGlmnet$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.glmnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GLM with Elastic Net Regularization Regression Learner — mlr_learners_regr.glmnet","text":"","code":"if (requireNamespace(\"glmnet\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"regr.glmnet\") print(learner)  # Define a Task task = tsk(\"mtcars\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerRegrGlmnet:regr.glmnet>: GLM with Elastic Net Regularization #> * Model: - #> * Parameters: family=gaussian #> * Packages: mlr3, mlr3learners, glmnet #> * Predict Types:  [response] #> * Feature Types: logical, integer, numeric #> * Properties: weights #>  #> Call:  (if (cv) glmnet::cv.glmnet else glmnet::glmnet)(x = data, y = target,      family = \"gaussian\")  #>  #>    Df  %Dev Lambda #> 1   0  0.00 4.9370 #> 2   1 13.22 4.4980 #> 3   2 24.47 4.0990 #> 4   2 34.34 3.7350 #> 5   2 42.53 3.4030 #> 6   2 49.33 3.1000 #> 7   2 54.98 2.8250 #> 8   2 59.67 2.5740 #> 9   2 63.56 2.3450 #> 10  2 66.79 2.1370 #> 11  2 69.48 1.9470 #> 12  2 71.70 1.7740 #> 13  3 73.59 1.6170 #> 14  3 75.27 1.4730 #> 15  4 76.87 1.3420 #> 16  4 78.34 1.2230 #> 17  4 79.56 1.1140 #> 18  3 80.56 1.0150 #> 19  4 81.74 0.9251 #> 20  4 83.05 0.8429 #> 21  4 84.13 0.7680 #> 22  4 85.03 0.6998 #> 23  5 86.08 0.6376 #> 24  5 87.08 0.5810 #> 25  5 87.90 0.5294 #> 26  5 88.59 0.4823 #> 27  5 89.16 0.4395 #> 28  5 89.63 0.4004 #> 29  5 90.02 0.3649 #> 30  6 90.41 0.3325 #> 31  7 90.88 0.3029 #> 32  7 91.31 0.2760 #> 33  7 91.59 0.2515 #> 34  7 91.78 0.2291 #> 35  7 91.93 0.2088 #> 36  7 92.06 0.1902 #> 37  7 92.16 0.1733 #> 38  7 92.25 0.1579 #> 39  7 92.32 0.1439 #> 40  7 92.38 0.1311 #> 41  7 92.43 0.1195 #> 42  7 92.48 0.1089 #> 43  7 92.51 0.0992 #> 44  7 92.54 0.0904 #> 45  7 92.56 0.0824 #> 46  7 92.58 0.0750 #> 47  7 92.60 0.0684 #> 48  7 92.61 0.0623 #> 49  8 92.74 0.0568 #> 50  8 92.95 0.0517 #> 51  9 93.14 0.0471 #> 52  9 93.31 0.0429 #> 53  9 93.45 0.0391 #> 54  9 93.56 0.0356 #> 55  9 93.66 0.0325 #> 56  9 93.74 0.0296 #> 57  9 93.80 0.0270 #> 58  9 93.86 0.0246 #> 59  9 93.90 0.0224 #> 60  9 93.94 0.0204 #> 61  9 93.97 0.0186 #> 62  9 94.00 0.0169 #> 63  9 94.02 0.0154 #> 64  9 94.04 0.0141 #> 65  9 94.05 0.0128 #> 66  9 94.07 0.0117 #> 67  9 94.08 0.0106 #> 68  9 94.09 0.0097 #> 69  9 94.09 0.0088 #> 70  9 94.10 0.0080 #> 71  9 94.10 0.0073 #> 72  9 94.11 0.0067 #> 73  9 94.11 0.0061 #> 74  9 94.12 0.0055 #> 75  9 94.12 0.0051 #> 76 10 94.12 0.0046 #> 77 10 94.12 0.0042 #> Warning: Multiple lambdas have been fit. Lambda will be set to 0.01 (see parameter 's'). #> regr.mse  #>  19.2169"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":null,"dir":"Reference","previous_headings":"","what":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"k-Nearest-Neighbor regression. Calls kknn::kknn() package kknn.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"training step k-NN models, just storing training data process predict step. Therefore, $model returns list following elements: formula: Formula calling kknn::kknn() $predict(). data: Training data calling kknn::kknn() $predict(). pv: Training parameters calling kknn::kknn() $predict(). kknn: Model returned kknn::kknn(), available $predict() called. stored default, must set hyperparameter store_model TRUE.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"store_model: See note.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.kknn\") lrn(\"regr.kknn\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"Task type: “regr” Predict Types: “response” Feature Types: “logical”, “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, mlr3learners, kknn","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"Hechenbichler, Klaus, Schliep, Klaus (2004). “Weighted k-nearest-neighbor techniques ordinal classification.” Technical Report Discussion Paper 399, SFB 386, Ludwig-Maximilians University Munich. doi:10.5282/ubm/epub.1769 . Samworth, J R (2012). “Optimal weighted nearest neighbour classifiers.” Annals Statistics, 40(5), 2733--2763. doi:10.1214/12-AOS1049 . Cover, Thomas, Hart, Peter (1967). “Nearest neighbor pattern classification.” IEEE transactions information theory, 13(1), 21--27. doi:10.1109/TIT.1967.1053964 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrKKNN","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"LearnerRegrKKNN$new() LearnerRegrKKNN$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"","code":"LearnerRegrKKNN$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"","code":"LearnerRegrKKNN$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.kknn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"k-Nearest-Neighbor Regression Learner — mlr_learners_regr.kknn","text":"","code":"if (requireNamespace(\"kknn\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"regr.kknn\") print(learner)  # Define a Task task = tsk(\"mtcars\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerRegrKKNN:regr.kknn>: k-Nearest-Neighbor #> * Model: - #> * Parameters: k=7 #> * Packages: mlr3, mlr3learners, kknn #> * Predict Types:  [response] #> * Feature Types: logical, integer, numeric, factor, ordered #> * Properties: - #> $formula #> mpg ~ . #> NULL #>  #> $data #>      mpg am carb cyl  disp drat gear  hp  qsec vs    wt #>  1: 21.0  1    4   6 160.0 3.90    4 110 16.46  0 2.620 #>  2: 21.0  1    4   6 160.0 3.90    4 110 17.02  0 2.875 #>  3: 24.4  0    2   4 146.7 3.69    4  62 20.00  1 3.190 #>  4: 22.8  0    2   4 140.8 3.92    4  95 22.90  1 3.150 #>  5: 19.2  0    4   6 167.6 3.92    4 123 18.30  1 3.440 #>  6: 21.5  0    1   4 120.1 3.70    3  97 20.01  1 2.465 #>  7: 26.0  1    2   4 120.3 4.43    5  91 16.70  0 2.140 #>  8: 19.7  1    6   6 145.0 3.62    5 175 15.50  0 2.770 #>  9: 21.4  1    2   4 121.0 4.11    4 109 18.60  1 2.780 #> 10: 18.1  0    1   6 225.0 2.76    3 105 20.22  1 3.460 #> 11: 17.3  0    3   8 275.8 3.07    3 180 17.60  0 3.730 #> 12: 15.2  0    3   8 275.8 3.07    3 180 18.00  0 3.780 #> 13: 10.4  0    4   8 472.0 2.93    3 205 17.98  0 5.250 #> 14: 10.4  0    4   8 460.0 3.00    3 215 17.82  0 5.424 #> 15: 14.7  0    4   8 440.0 3.23    3 230 17.42  0 5.345 #> 16: 15.5  0    2   8 318.0 2.76    3 150 16.87  0 3.520 #> 17: 15.2  0    2   8 304.0 3.15    3 150 17.30  0 3.435 #> 18: 15.0  1    8   8 301.0 3.54    5 335 14.60  0 3.570 #> 19: 32.4  1    1   4  78.7 4.08    4  66 19.47  1 2.200 #> 20: 33.9  1    1   4  71.1 4.22    4  65 19.90  1 1.835 #> 21: 30.4  1    2   4  95.1 3.77    5 113 16.90  1 1.513 #>      mpg am carb cyl  disp drat gear  hp  qsec vs    wt #>  #> $pv #> $pv$k #> [1] 7 #>  #>  #> $kknn #> NULL #>  #> regr.mse  #> 9.082784"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":null,"dir":"Reference","previous_headings":"","what":"Kriging Regression Learner — mlr_learners_regr.km","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"Kriging regression. Calls DiceKriging::km() package DiceKriging. predict type hyperparameter \"type\" defaults \"sk\" (simple kriging). additional hyperparameter nugget.stability used overwrite hyperparameter nugget nugget.stability * var(y) training improve numerical stability. recommend value 1e-8. additional hyperparameter jitter can set add N(0, [jitter])-distributed noise data prediction avoid perfect interpolation. recommend value 1e-12.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.km\") lrn(\"regr.km\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"Task type: “regr” Predict Types: “response”, “se” Feature Types: “logical”, “integer”, “numeric” Required Packages: mlr3, mlr3learners, DiceKriging","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"Roustant O, Ginsbourger D, Deville Y (2012). “DiceKriging, DiceOptim: Two R Packages Analysis Computer Experiments Kriging-Based Metamodeling Optimization.” Journal Statistical Software, 51(1), 1--55. doi:10.18637/jss.v051.i01 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrKM","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"LearnerRegrKM$new() LearnerRegrKM$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"","code":"LearnerRegrKM$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"","code":"LearnerRegrKM$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.km.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kriging Regression Learner — mlr_learners_regr.km","text":"","code":"if (requireNamespace(\"DiceKriging\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"regr.km\") print(learner)  # Define a Task task = tsk(\"mtcars\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerRegrKM:regr.km>: Kriging #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, DiceKriging #> * Predict Types:  [response], se #> * Feature Types: logical, integer, numeric #> * Properties: - #>  #> optimisation start #> ------------------ #> * estimation method   : MLE  #> * optimisation method : BFGS  #> * analytical gradient : used #> * trend model : ~1 #> * covariance model :  #>   - type :  matern5_2  #>   - nugget : NO #>   - parameters lower bounds :  1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10  #>   - parameters upper bounds :  2 14 8 801.8 3 4 546 11.02 2 7.822  #>   - best initial criterion value(s) :  -56.72636  #>  #> N = 10, M = 5 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=       56.726  |proj g|=      0.83258 #> At iterate     1  f =       55.672  |proj g|=       0.29689 #> At iterate     2  f =        55.42  |proj g|=        0.3234 #> At iterate     3  f =       54.834  |proj g|=       0.39579 #> ys=-9.989e-02  -gs= 5.097e-01, BFGS update SKIPPED #> At iterate     4  f =       54.041  |proj g|=       0.57117 #> At iterate     5  f =       53.913  |proj g|=        0.2539 #> At iterate     6  f =         53.8  |proj g|=       0.31552 #> At iterate     7  f =       53.701  |proj g|=       0.40161 #> At iterate     8  f =       53.646  |proj g|=       0.25108 #> At iterate     9  f =       53.598  |proj g|=       0.11962 #> At iterate    10  f =       53.591  |proj g|=      0.076163 #> At iterate    11  f =       53.545  |proj g|=       0.07537 #> At iterate    12  f =        53.48  |proj g|=       0.17242 #> At iterate    13  f =       53.468  |proj g|=       0.11316 #> At iterate    14  f =       53.463  |proj g|=     0.0058849 #> At iterate    15  f =       53.463  |proj g|=    0.00065632 #> At iterate    16  f =       53.463  |proj g|=    0.00057195 #> At iterate    17  f =       53.463  |proj g|=    0.00057188 #> At iterate    18  f =       53.463  |proj g|=     0.0015541 #> At iterate    19  f =       53.463  |proj g|=     0.0030341 #> At iterate    20  f =       53.463  |proj g|=     0.0056578 #> At iterate    21  f =       53.463  |proj g|=     0.0097899 #> At iterate    22  f =       53.462  |proj g|=        0.0166 #> At iterate    23  f =       53.462  |proj g|=      0.027549 #> At iterate    24  f =       53.461  |proj g|=      0.044965 #> At iterate    25  f =       53.459  |proj g|=      0.071325 #> At iterate    26  f =       53.452  |proj g|=       0.10693 #> At iterate    27  f =       53.447  |proj g|=      0.092123 #> At iterate    28  f =       53.441  |proj g|=      0.012986 #> At iterate    29  f =       53.441  |proj g|=     0.0013565 #> At iterate    30  f =       53.441  |proj g|=    5.4738e-05 #> At iterate    31  f =       53.441  |proj g|=    5.4722e-05 #>  #> iterations 31 #> function evaluations 34 #> segments explored during Cauchy searches 32 #> BFGS updates skipped 1 #> active bounds at final generalized Cauchy point 7 #> norm of the final projected gradient 5.47223e-05 #> final function value 53.4411 #>  #> F = 53.4411 #> final  value 53.441089  #> converged #>  #> Call: #> DiceKriging::km(design = data, response = task$truth(), control = pv$control) #>  #> Trend  coeff.: #>                Estimate #>  (Intercept)    20.1190 #>  #> Covar. type  : matern5_2  #> Covar. coeff.: #>                Estimate #>    theta(am)     2.0000 #>  theta(carb)    14.0000 #>   theta(cyl)     0.0000 #>  theta(disp)   568.0814 #>  theta(drat)     3.0000 #>  theta(gear)     0.0000 #>    theta(hp)   546.0000 #>  theta(qsec)     2.5927 #>    theta(vs)     2.0000 #>    theta(wt)     2.4575 #>  #> Variance estimate: 32.76309 #> regr.mse  #> 9.276931"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Model Regression Learner — mlr_learners_regr.lm","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"Ordinary linear regression. Calls stats::lm().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.lm\") lrn(\"regr.lm\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"Task type: “regr” Predict Types: “response”, “se” Feature Types: “logical”, “integer”, “numeric”, “character”, “factor” Required Packages: mlr3, mlr3learners, 'stats'","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"contrasts","dir":"Reference","previous_headings":"","what":"Contrasts","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"ensure reproducibility, learner always uses default contrasts: contr.treatment() unordered factors, contr.poly() ordered factors. Setting option \"contrasts\" effect. Instead, set respective hyperparameter use mlr3pipelines create dummy features.","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrLM","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"LearnerRegrLM$new() LearnerRegrLM$loglik() LearnerRegrLM$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"","code":"LearnerRegrLM$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"method-loglik-","dir":"Reference","previous_headings":"","what":"Method loglik()","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"Extract log-likelihood (e.g., via stats::logLik() fitted model.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"","code":"LearnerRegrLM$loglik()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"","code":"LearnerRegrLM$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Model Regression Learner — mlr_learners_regr.lm","text":"","code":"if (requireNamespace(\"stats\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"regr.lm\") print(learner)  # Define a Task task = tsk(\"mtcars\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerRegrLM:regr.lm>: Linear Model #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, stats #> * Predict Types:  [response], se #> * Feature Types: logical, integer, numeric, character, factor #> * Properties: loglik, weights #>  #> Call: #> stats::lm(formula = task$formula(), data = task$data()) #>  #> Coefficients: #> (Intercept)           am         carb          cyl         disp         drat   #>    29.08954      1.66666     -0.09010     -1.10554      0.01648      1.09575   #>        gear           hp         qsec           vs           wt   #>    -0.87474     -0.01061      0.43587      0.15351     -4.07656   #>  #> regr.mse  #> 7.344788"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Neural Network Regression Learner — mlr_learners_regr.nnet","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"Single Layer Neural Network. Calls nnet::nnet.formula() package nnet. Note modern neural networks multiple layers connected via package mlr3keras.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.nnet\") lrn(\"regr.nnet\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"Task type: “regr” Predict Types: “response” Feature Types: “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, mlr3learners, nnet","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"size: Adjusted default: 3L. Reason change: default nnet().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"custom-mlr-parameters","dir":"Reference","previous_headings":"","what":"Custom mlr3 parameters","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"formula: provided, formula set task$formula().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"Ripley BD (1996). Pattern Recognition Neural Networks. Cambridge University Press. doi:10.1017/cbo9780511812651 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrNnet","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"LearnerRegrNnet$new() LearnerRegrNnet$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"","code":"LearnerRegrNnet$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"","code":"LearnerRegrNnet$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.nnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Neural Network Regression Learner — mlr_learners_regr.nnet","text":"","code":"if (requireNamespace(\"nnet\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"regr.nnet\") print(learner)  # Define a Task task = tsk(\"mtcars\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerRegrNnet:regr.nnet>: Single Layer Neural Network #> * Model: - #> * Parameters: size=3 #> * Packages: mlr3, mlr3learners, nnet #> * Predict Types:  [response] #> * Feature Types: integer, numeric, factor, ordered #> * Properties: weights #> # weights:  37 #> initial  value 9595.374428  #> final  value 698.006667  #> converged #> a 10-3-1 network with 37 weights #> inputs: am carb cyl disp drat gear hp qsec vs wt  #> output(s): mpg  #> options were - linear output units  #> regr.mse  #> 38.92232"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranger Regression Learner — mlr_learners_regr.ranger","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"Random regression forest. Calls ranger::ranger() package ranger.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.ranger\") lrn(\"regr.ranger\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"Task type: “regr” Predict Types: “response”, “se” Feature Types: “logical”, “integer”, “numeric”, “character”, “factor”, “ordered” Required Packages: mlr3, mlr3learners, ranger","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"custom-mlr-parameters","dir":"Reference","previous_headings":"","what":"Custom mlr3 parameters","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"mtry: hyperparameter can alternatively set via hyperparameter mtry.ratio mtry = max(ceiling(mtry.ratio * n_features), 1). Note mtry mtry.ratio mutually exclusive.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"num.threads: Actual default: NULL, triggering auto-detection number CPUs. Adjusted value: 1. Reason change: Conflicting parallelization via future.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"Wright, N. M, Ziegler, Andreas (2017). “ranger: Fast Implementation Random Forests High Dimensional Data C++ R.” Journal Statistical Software, 77(1), 1--17. doi:10.18637/jss.v077.i01 . Breiman, Leo (2001). “Random Forests.” Machine Learning, 45(1), 5--32. ISSN 1573-0565, doi:10.1023/:1010933404324 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrRanger","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"LearnerRegrRanger$new() LearnerRegrRanger$importance() LearnerRegrRanger$oob_error() LearnerRegrRanger$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"","code":"LearnerRegrRanger$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"importance scores extracted model slot variable.importance. Parameter importance.mode must set \"impurity\", \"impurity_corrected\", \"permutation\"","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"","code":"LearnerRegrRanger$importance()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"Named numeric().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"method-oob-error-","dir":"Reference","previous_headings":"","what":"Method oob_error()","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"--bag error, extracted model slot prediction.error.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"","code":"LearnerRegrRanger$oob_error()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"numeric(1).","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"","code":"LearnerRegrRanger$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.ranger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ranger Regression Learner — mlr_learners_regr.ranger","text":"","code":"if (requireNamespace(\"ranger\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"regr.ranger\") print(learner)  # Define a Task task = tsk(\"mtcars\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerRegrRanger:regr.ranger>: Random Forest #> * Model: - #> * Parameters: num.threads=1 #> * Packages: mlr3, mlr3learners, ranger #> * Predict Types:  [response], se #> * Feature Types: logical, integer, numeric, character, factor, ordered #> * Properties: hotstart_backward, importance, oob_error, weights #> Ranger result #>  #> Call: #>  ranger::ranger(dependent.variable.name = task$target_names, data = task$data(),      case.weights = task$weights$weight, num.threads = 1L)  #>  #> Type:                             Regression  #> Number of trees:                  500  #> Sample size:                      21  #> Number of independent variables:  10  #> Mtry:                             3  #> Target node size:                 5  #> Variable importance mode:         none  #> Splitrule:                        variance  #> OOB prediction error (MSE):       6.959043  #> R squared (OOB):                  0.8045283  #> function ()  #> .__LearnerRegrRanger__importance(self = self, private = private,  #>     super = super) #> <environment: 0x55670cabc590> #> regr.mse  #> 5.474102"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":null,"dir":"Reference","previous_headings":"","what":"Support Vector Machine — mlr_learners_regr.svm","title":"Support Vector Machine — mlr_learners_regr.svm","text":"Support vector machine regression. Calls e1071::svm() package e1071.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Support Vector Machine — mlr_learners_regr.svm","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.svm\") lrn(\"regr.svm\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Support Vector Machine — mlr_learners_regr.svm","text":"Task type: “regr” Predict Types: “response” Feature Types: “logical”, “integer”, “numeric” Required Packages: mlr3, mlr3learners, e1071","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Support Vector Machine — mlr_learners_regr.svm","text":"Cortes, Corinna, Vapnik, Vladimir (1995). “Support-vector networks.” Machine Learning, 20(3), 273--297. doi:10.1007/BF00994018 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Support Vector Machine — mlr_learners_regr.svm","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrSVM","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Support Vector Machine — mlr_learners_regr.svm","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Support Vector Machine — mlr_learners_regr.svm","text":"LearnerRegrSVM$new() LearnerRegrSVM$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Support Vector Machine — mlr_learners_regr.svm","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support Vector Machine — mlr_learners_regr.svm","text":"","code":"LearnerRegrSVM$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Support Vector Machine — mlr_learners_regr.svm","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Support Vector Machine — mlr_learners_regr.svm","text":"","code":"LearnerRegrSVM$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support Vector Machine — mlr_learners_regr.svm","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.svm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Support Vector Machine — mlr_learners_regr.svm","text":"","code":"if (requireNamespace(\"e1071\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"regr.svm\") print(learner)  # Define a Task task = tsk(\"mtcars\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } #> <LearnerRegrSVM:regr.svm>: Support Vector Machine #> * Model: - #> * Parameters: list() #> * Packages: mlr3, mlr3learners, e1071 #> * Predict Types:  [response] #> * Feature Types: logical, integer, numeric #> * Properties: - #>  #> Call: #> svm.default(x = data, y = task$truth()) #>  #>  #> Parameters: #>    SVM-Type:  eps-regression  #>  SVM-Kernel:  radial  #>        cost:  1  #>       gamma:  0.1  #>     epsilon:  0.1  #>  #>  #> Number of Support Vectors:  19 #>  #> regr.mse  #> 10.72975"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":null,"dir":"Reference","previous_headings":"","what":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"eXtreme Gradient Boosting regression. Calls xgboost::xgb.train() package xgboost. compute GPUs, first need compile xgboost link CUDA. See https://xgboost.readthedocs.io/en/stable/build.html#building--gpu-support. Note using watchlist parameter directly lead problems wrapping Learner mlr3pipelines GraphLearner preprocessing steps applied data watchlist.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"compute GPUs, first need compile xgboost link CUDA. See https://xgboost.readthedocs.io/en/stable/build.html#building--gpu-support.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.xgboost\") lrn(\"regr.xgboost\")"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"Task type: “regr” Predict Types: “response” Feature Types: “logical”, “integer”, “numeric” Required Packages: mlr3, mlr3learners, xgboost","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"early-stopping","dir":"Reference","previous_headings":"","what":"Early stopping","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"Early stopping can used find optimal number boosting rounds. early_stopping_set parameter controls set used monitor performance. Set early_stopping_set = \"test\" monitor performance model test set training. test set early stopping can set \"test\" row role mlr3::Task. Additionally, range must set performance must increase early_stopping_rounds maximum number boosting rounds nrounds. resampling, test set automatically applied mlr3::Resampling. using test set early stopping can potentially bias performance scores. See section early stopping examples.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"nrounds: Actual default: default. Adjusted default: 1. Reason change: Without default construction learner error. Just setting nonsense default workaround . nrounds needs tuned user. nthread: Actual value: Undefined, triggering auto-detection number CPUs. Adjusted value: 1. Reason change: Conflicting parallelization via future. verbose: Actual default: 1. Adjusted default: 0. Reason change: Reduce verbosity.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"Chen, Tianqi, Guestrin, Carlos (2016). “Xgboost: scalable tree boosting system.” Proceedings 22nd ACM SIGKDD Conference Knowledge Discovery Data Mining, 785--794. ACM. doi:10.1145/2939672.2939785 .","code":""},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrXgboost","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"LearnerRegrXgboost$new() LearnerRegrXgboost$importance() LearnerRegrXgboost$clone()","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"","code":"LearnerRegrXgboost$new()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"importance scores calculated xgboost::xgb.importance().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"","code":"LearnerRegrXgboost$importance()"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"Named numeric().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"objects class cloneable method.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"","code":"LearnerRegrXgboost$clone(deep = FALSE)"},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/reference/mlr_learners_regr.xgboost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extreme Gradient Boosting Regression Learner — mlr_learners_regr.xgboost","text":"","code":"if (FALSE) { if (requireNamespace(\"xgboost\", quietly = TRUE)) { # Define the Learner and set parameter values learner = lrn(\"regr.xgboost\") print(learner)  # Define a Task task = tsk(\"mtcars\")  # Create train and test set ids = partition(task)  # Train the learner on the training ids learner$train(task, row_ids = ids$train)  # print the model print(learner$model)  # importance method if(\"importance\" %in% learner$properties) print(learner$importance)  # Make predictions for the test rows predictions = learner$predict(task, row_ids = ids$test)  # Score the predictions predictions$score() } }  if (FALSE) { # Train learner with early stopping on spam data set task = tsk(\"mtcars\")  # Split task into training and test set split = partition(task, ratio = 0.8) task$set_row_roles(split$test, \"test\")  # Set early stopping parameter learner = lrn(\"regr.xgboost\",   nrounds = 100,   early_stopping_rounds = 10,   early_stopping_set = \"test\" )  # Train learner with early stopping learner$train(task) }"},{"path":[]},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-058","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.5.8","title":"mlr3learners 0.5.8","text":"CRAN release: 2023-12-21 Adaption memory optimization mlr3 0.17.1.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-057","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.5.7","title":"mlr3learners 0.5.7","text":"CRAN release: 2023-11-21 Added labels learners. Added formula argument nnet learner support feature type \"integer\". Added min.bucket parameter classif.ranger regr.ranger.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-056","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.5.6","title":"mlr3learners 0.5.6","text":"CRAN release: 2023-01-06 Enable new early stopping mechanism xgboost. Improved documentation. fix: unloading mlr3learners removes learners dictionary.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-054","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.5.4","title":"mlr3learners 0.5.4","text":"CRAN release: 2022-08-15 Added regr.nnet learner. Removed option use weights classif.log_reg. Added default_values() function ranger svm learners. Improved documentation.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-053","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.5.3","title":"mlr3learners 0.5.3","text":"CRAN release: 2022-05-25 Survival learners moved mlr3extralearners (maintained Github): https://github.com/mlr-org/mlr3extralearners","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-052","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.5.2","title":"mlr3learners 0.5.2","text":"CRAN release: 2022-01-22 learners now reorder columns predict task according order columns training task. Removed workaround old mlr3 versions.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-051","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.5.1","title":"mlr3learners 0.5.1","text":"CRAN release: 2021-11-19 eval_metric() now explicitly set xgboost learners silence deprecation warning. Improved added hyperparameter mtry.ratio converted mtry simplify tuning. Multiple updates hyperparameter sets.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-050","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.5.0","title":"mlr3learners 0.5.0","text":"CRAN release: 2021-08-17 Fixed internal encoding positive class classification learners based glm glmnet (#199). predictions previous versions correct, estimated coefficients wrong sign. Reworked handling lambda s glmnet learners (#197). Learners based glmnet now support extract selected features (#200). Learners based kknn now raise exception k >= n (#191). Learners based ranger now come virtual hyperparameter mtry.ratio set hyperparameter mtry based proportion features use. Multiple learners now support extraction log-likelihood (via method $loglik()), allowing calculate measures like AIC BIC mlr3 (#182).","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-045","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.4.5","title":"mlr3learners 0.4.5","text":"CRAN release: 2021-03-18 Fixed SVM learners new release package e1071.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-044","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.4.4","title":"mlr3learners 0.4.4","text":"CRAN release: 2021-03-15 Changed hyperparameters learners make run sequentially defaults. new function set_threads() mlr3 provides generic way set respective hyperparameter desired number parallel threads. Added survival:aft objective surv.xgboost Removed hyperparameter predict.ranger learners (#172).","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-043","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.4.3","title":"mlr3learners 0.4.3","text":"CRAN release: 2020-12-08 Fixed stochastic test failures solaris. Fixed surv.ranger, c.f. https://github.com/mlr-org/mlr3proba/issues/165. Added classif.nnet learner (moved mlr3extralearners).","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-042","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.4.2","title":"mlr3learners 0.4.2","text":"CRAN release: 2020-11-11 Fixed bug survival random forest LearnerSurvRanger.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-041","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.4.1","title":"mlr3learners 0.4.1","text":"CRAN release: 2020-10-07 Disabled glmnet tests solaris. Removed dependency orphaned package bibtex.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-040","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.4.0","title":"mlr3learners 0.4.0","text":"CRAN release: 2020-09-25 Fixed potential label switch classif.glmnet classif.cv_glmnet predict_type set \"prob\" (#155). Fixed learners package glmnet robust order features changed train predict.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-030","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.3.0","title":"mlr3learners 0.3.0","text":"CRAN release: 2020-08-29 $model slot {kknn} learner now returns list containing information used predict step. , slot empty training step kknn. Compact -memory representation R6 objects save space saving mlr3 objects via saveRDS(), serialize() etc. glmnet learners: penalty.factor vector param, ParamDbl (#141) glmnet: Add params mxitnr epsnr glmnet v4.0 update Add learner surv.glmnet (#130) Suggest package mlr3proba (#144) Add learner surv.xgboost (#135) Add learner surv.ranger (#134)","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-020","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.2.0","title":"mlr3learners 0.2.0","text":"CRAN release: 2020-04-22 Split glmnet learner cv_glmnet glmnet (#99) glmnet learners: Add predict.gamma newoffset arg (#98) now test learners can constructed without parameters. new custom “Paramtest” lives inst/paramtest added. test checks arguments upstream train & predict functions ensures parameters implemented respective mlr3 learner (#96). lot missing parameters added learners. See #96 complete list. Add parameter interaction_constraints {xgboost} learners (#97).","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-0169000","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.1.6.9000","title":"mlr3learners 0.1.6.9000","text":"Added learner classif.multinom package nnet. Learners regr.lm classif.log_reg now ignore global option \"contrasts\". Add vignette additional-learners.Rmd listing mlr3 custom learners Move Learner*Glmnet Learner*CVGlmnet add Learner*Glmnet (without internal tuning) (#90)","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"xgboost-0-1-6-9000","dir":"Changelog","previous_headings":"","what":"XGBoost","title":"mlr3learners 0.1.6.9000","text":"Add parameter interaction_constraints (#95)","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-016","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.1.6","title":"mlr3learners 0.1.6","text":"CRAN release: 2020-02-10 Added missing feature type logical() multiple learners.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-015","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.1.5","title":"mlr3learners 0.1.5","text":"CRAN release: 2019-11-25 Added parameter parameter dependencies regr.glmnet, regr.km, regr.ranger, regr.svm, regr.xgboost, classif.glmnet, classif.lda, classif.naivebayes, classif.qda, classif.ranger classif.svm. glmnet: Added relax parameter (v3.0) xgboost: Updated parameters v0.90.0.2","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-014","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.1.4","title":"mlr3learners 0.1.4","text":"CRAN release: 2019-10-29 Fixed bug *.xgboost *.svm triggered columns reordered $train() $predict().","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-013","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.1.3","title":"mlr3learners 0.1.3","text":"CRAN release: 2019-09-17 Changes work new mlr3::Learner API. Improved documentation. Added references. add new parameters xgboost version 0.90.2 add parameter dependencies xgboost","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-012","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.1.2","title":"mlr3learners 0.1.2","text":"CRAN release: 2019-08-26 Maintenance release.","code":""},{"path":"https://mlr3learners.mlr-org.com/dev/news/index.html","id":"mlr3learners-011","dir":"Changelog","previous_headings":"","what":"mlr3learners 0.1.1","title":"mlr3learners 0.1.1","text":"CRAN release: 2019-08-05 Initial upload CRAN.","code":""}]
